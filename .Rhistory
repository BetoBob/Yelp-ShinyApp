library(yelpr)
key <- "pxKTGs3uKpDZXQSo1nKmJKSPycfRqixcudXpKm8oAuVRNEjx_MVUhBryPP8Gg5MgPn6Cl28RO6dfRNFrh3jNQVdcDxu-uNI5IUT7-phwJPiOW2L2D2cRrEtIXJyAXHYx"
businesses <- stream_in(file("data/business.json"))
knitr::opts_chunk$set(echo = TRUE)
head(businesses_SLO)
knitr::opts_chunk$set(echo = TRUE)
library(jsonlite)
library(tidyverse)
library(yelpr)
key <- "pxKTGs3uKpDZXQSo1nKmJKSPycfRqixcudXpKm8oAuVRNEjx_MVUhBryPP8Gg5MgPn6Cl28RO6dfRNFrh3jNQVdcDxu-uNI5IUT7-phwJPiOW2L2D2cRrEtIXJyAXHYx"
# search businesses with keyword 'chinese' in 'New York'
business_ny <- business_search(api_key = key,
location = 'New York',
term = "chinese",
limit = 10)
business_SLO <- as.data.frame(business_search(api_key = key, location = 'San Luis Obispo', limit = 50))
nrow(business_SLO)
businesses <- business_search(api_key = key, location = 'San Luis Obispo', limit = 50)
num <- (as.data.frame(businesses) %>% select(total))[1,1]
num
businesses_test <- business_search(api_key = key, location = 'San Luis Obispo', limit = 50)
append <- business_search(api_key = key, location = 'San Luis Obispo', limit = 50, offset = 50)
b <- as.data.frame(businesses_test, row.names = c(1:50))
a <- as.data.frame(append, row.names = c(51:100))
glimpse(a)
region.center <- b[1,]$region.center.latitude
# remove closed businesses
#b <- b %>%
#filter(businesses.is_closed == FALSE)
b <- as.data.frame(businesses_test, row.names = c(1:50))
a <- as.data.frame(append, row.names = c(51:100))
# spread dataframe columns
b["latitude"]  <- businesses[["businesses"]][["coordinates"]][["latitude"]]
b["longitude"] <- businesses[["businesses"]][["coordinates"]][["longitude"]]
b["address"] <- businesses[["businesses"]][["location"]][["address1"]]
b["zip_code"] <- businesses[["businesses"]][["location"]][["zip_code"]]
b["state"] <- businesses[["businesses"]][["location"]][["state"]]
b["country"] <- businesses[["businesses"]][["location"]][["country"]]
a["latitude"]  <- append[["businesses"]][["coordinates"]][["latitude"]]
a["longitude"] <- append[["businesses"]][["coordinates"]][["longitude"]]
a["address"] <- append[["businesses"]][["location"]][["address1"]]
a["zip_code"] <- append[["businesses"]][["location"]][["zip_code"]]
a["state"] <- append[["businesses"]][["location"]][["state"]]
a["country"] <- append[["businesses"]][["location"]][["country"]]
combo <- rbind(b %>% select(-c(businesses.coordinates, businesses.location)), a %>% select(-c(businesses.coordinates, businesses.location)))
head(combo)
get_businesses <- function(my_location) {
key <- "pxKTGs3uKpDZXQSo1nKmJKSPycfRqixcudXpKm8oAuVRNEjx_MVUhBryPP8Gg5MgPn6Cl28RO6dfRNFrh3jNQVdcDxu-uNI5IUT7-phwJPiOW2L2D2cRrEtIXJyAXHYx"
businesses <- business_search(api_key = key, location = my_location, limit = 50)
# create the initial dataframe
b <- as.data.frame(businesses, row.names = c(1:50))
b["latitude"]  <- businesses[["businesses"]][["coordinates"]][["latitude"]]
b["longitude"] <- businesses[["businesses"]][["coordinates"]][["longitude"]]
b["address"] <- businesses[["businesses"]][["location"]][["address1"]]
b["zip_code"] <- businesses[["businesses"]][["location"]][["zip_code"]]
b["state"] <- businesses[["businesses"]][["location"]][["state"]]
b["country"] <- businesses[["businesses"]][["location"]][["country"]]
b <- b %>% select(-c(businesses.coordinates, businesses.location))
num <- (b %>% select(total))[1,1]
my_offset <- 50 # max number of businesses per API call
while(my_offset < num) {
# create data to append
append <- business_search(api_key = key, location = my_location, limit = 50, offset = my_offset)
a <- as.data.frame(append)
a["latitude"]  <- append[["businesses"]][["coordinates"]][["latitude"]]
a["longitude"] <- append[["businesses"]][["coordinates"]][["longitude"]]
a["address"] <- append[["businesses"]][["location"]][["address1"]]
a["zip_code"] <- append[["businesses"]][["location"]][["zip_code"]]
a["state"] <- append[["businesses"]][["location"]][["state"]]
a["country"] <- append[["businesses"]][["location"]][["country"]]
b <- rbind(b, a %>% select(-c(businesses.coordinates, businesses.location)))
my_offset = my_offset + 50
}
b
}
businesses_SLO <- get_businesses("San Luis Obispo")
head(businesses_SLO)
nrow(businesses_SLO)
businesses_SLO %>%
toJSON() %>%
write_lines("businesses_SLO.json")
businesses_SLO
head(businesses_SLO)
nrow(businesses_SLO)
businesses_SLO %>%
toJSON() %>%
write_lines("businesses_SLO.json")
businesses_SLO$businesses.categories
head(businesses_SLO)
nrow(businesses_SLO)
businesses_SLO %>%
toJSON() %>%
write_lines("businesses_SLO.json")
businesses_SLO$businesses.categories
head(businesses_SLO)
nrow(businesses_SLO)
businesses_SLO %>%
toJSON() %>%
write_lines("businesses_SLO.json")
businesses_SLO$businesses.categories
shiny::runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
?fromJSON
?fromJSON
??fromJSON
runApp('Yelp-ShinyApp')
library(jsonlite)
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
shiny::runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
library(jsonlite)
runApp('Yelp-ShinyApp')
Yelp_SLO <- as.data.frame(fromJSON("data/businesses_SLO.json"))
Yelp_SLO <- as.data.frame(fromJSON("data\businesses_SLO.json"))
Yelp_SLO <- as.data.frame(fromJSON("data/\businesses_SLO.json"))
Yelp_SLO <- as.data.frame(fromJSON("data\\businesses_SLO.json"))
Yelp_SLO <- as.data.frame(fromJSON("data//businesses_SLO.json"))
Yelp_SLO <- as.data.frame(fromJSON("data/businesses_SLO.json"))
Yelp_SLO <- as.data.frame(fromJSON("businesses_SLO.json"))
library(jsonlite)
library(tidyverse)
library(yelpr)
key <- "pxKTGs3uKpDZXQSo1nKmJKSPycfRqixcudXpKm8oAuVRNEjx_MVUhBryPP8Gg5MgPn6Cl28RO6dfRNFrh3jNQVdcDxu-uNI5IUT7-phwJPiOW2L2D2cRrEtIXJyAXHYx"
# search businesses with keyword 'chinese' in 'New York'
business_ny <- business_search(api_key = key,
location = 'New York',
term = "chinese",
limit = 10)
business_SLO <- as.data.frame(business_search(api_key = key, location = 'San Luis Obispo', limit = 50))
nrow(business_SLO)
businesses <- business_search(api_key = key, location = 'San Luis Obispo', limit = 50)
num <- (as.data.frame(businesses) %>% select(total))[1,1]
num
businesses_test <- business_search(api_key = key, location = 'San Luis Obispo', limit = 50)
append <- business_search(api_key = key, location = 'San Luis Obispo', limit = 50, offset = 50)
b <- as.data.frame(businesses_test, row.names = c(1:50))
a <- as.data.frame(append, row.names = c(51:100))
glimpse(a)
region.center <- b[1,]$region.center.latitude
# remove closed businesses
#b <- b %>%
#filter(businesses.is_closed == FALSE)
b <- as.data.frame(businesses_test, row.names = c(1:50))
a <- as.data.frame(append, row.names = c(51:100))
# spread dataframe columns
b["latitude"]  <- businesses[["businesses"]][["coordinates"]][["latitude"]]
b["longitude"] <- businesses[["businesses"]][["coordinates"]][["longitude"]]
b["address"] <- businesses[["businesses"]][["location"]][["address1"]]
b["zip_code"] <- businesses[["businesses"]][["location"]][["zip_code"]]
b["state"] <- businesses[["businesses"]][["location"]][["state"]]
b["country"] <- businesses[["businesses"]][["location"]][["country"]]
a["latitude"]  <- append[["businesses"]][["coordinates"]][["latitude"]]
a["longitude"] <- append[["businesses"]][["coordinates"]][["longitude"]]
a["address"] <- append[["businesses"]][["location"]][["address1"]]
a["zip_code"] <- append[["businesses"]][["location"]][["zip_code"]]
a["state"] <- append[["businesses"]][["location"]][["state"]]
a["country"] <- append[["businesses"]][["location"]][["country"]]
combo <- rbind(b %>% select(-c(businesses.coordinates, businesses.location)), a %>% select(-c(businesses.coordinates, businesses.location)))
head(combo)
get_businesses <- function(my_location) {
key <- "pxKTGs3uKpDZXQSo1nKmJKSPycfRqixcudXpKm8oAuVRNEjx_MVUhBryPP8Gg5MgPn6Cl28RO6dfRNFrh3jNQVdcDxu-uNI5IUT7-phwJPiOW2L2D2cRrEtIXJyAXHYx"
businesses <- business_search(api_key = key, location = my_location, limit = 50)
# create the initial dataframe
b <- as.data.frame(businesses, row.names = c(1:50))
b["latitude"]  <- businesses[["businesses"]][["coordinates"]][["latitude"]]
b["longitude"] <- businesses[["businesses"]][["coordinates"]][["longitude"]]
b["address"] <- businesses[["businesses"]][["location"]][["address1"]]
b["zip_code"] <- businesses[["businesses"]][["location"]][["zip_code"]]
b["state"] <- businesses[["businesses"]][["location"]][["state"]]
b["country"] <- businesses[["businesses"]][["location"]][["country"]]
b <- b %>% select(-c(businesses.coordinates, businesses.location))
num <- (b %>% select(total))[1,1]
my_offset <- 50 # max number of businesses per API call
while(my_offset < num) {
# create data to append
append <- business_search(api_key = key, location = my_location, limit = 50, offset = my_offset)
a <- as.data.frame(append)
a["latitude"]  <- append[["businesses"]][["coordinates"]][["latitude"]]
a["longitude"] <- append[["businesses"]][["coordinates"]][["longitude"]]
a["address"] <- append[["businesses"]][["location"]][["address1"]]
a["zip_code"] <- append[["businesses"]][["location"]][["zip_code"]]
a["state"] <- append[["businesses"]][["location"]][["state"]]
a["country"] <- append[["businesses"]][["location"]][["country"]]
b <- rbind(b, a %>% select(-c(businesses.coordinates, businesses.location)))
my_offset = my_offset + 50
}
b
}
businesses_SLO <- get_businesses("San Luis Obispo")
head(businesses_SLO)
nrow(businesses_SLO)
businesses_SLO %>%
toJSON() %>%
write_lines("businesses_SLO.json")
# testing categories merge
test <- head(businesses_SLO) %>% select(businesses.id, businesses.categories)
test2 <- head(businesses_SLO)
categories <- businesses_SLO %>%
select(businesses.id, businesses.categories) %>%
unnest()
categories_matrix <- categories %>%
spread(key = alias, value = title)
categories_matrix
categories_map <- data.frame(alias = unique(categories$alias), title = unique(categories$title))
categories_map
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('shiny-examples-master/002-text')
runApp('shiny-examples-master/003-reactivity')
runApp('shiny-examples-master/004-mpg')
runApp('shiny-examples-master/005-sliders')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('shiny-examples-master/005-sliders')
runApp('Yelp-ShinyApp')
install.packages("shinywidgets")
install.packages("shinyWidgets")
runApp('Yelp-ShinyApp')
library(jsonlite)
library(tidyverse)
library(yelpr)
key <- "pxKTGs3uKpDZXQSo1nKmJKSPycfRqixcudXpKm8oAuVRNEjx_MVUhBryPP8Gg5MgPn6Cl28RO6dfRNFrh3jNQVdcDxu-uNI5IUT7-phwJPiOW2L2D2cRrEtIXJyAXHYx"
# search businesses with keyword 'chinese' in 'New York'
business_ny <- business_search(api_key = key,
location = 'New York',
term = "chinese",
limit = 10)
knitr::opts_chunk$set(echo = TRUE)
library(jsonlite)
library(tidyverse)
library(yelpr)
key <- "pxKTGs3uKpDZXQSo1nKmJKSPycfRqixcudXpKm8oAuVRNEjx_MVUhBryPP8Gg5MgPn6Cl28RO6dfRNFrh3jNQVdcDxu-uNI5IUT7-phwJPiOW2L2D2cRrEtIXJyAXHYx"
# search businesses with keyword 'chinese' in 'New York'
business_ny <- business_search(api_key = key,
location = 'New York',
term = "chinese",
limit = 10)
business_SLO <- as.data.frame(business_search(api_key = key, location = 'San Luis Obispo', limit = 50))
nrow(business_SLO)
businesses <- business_search(api_key = key, location = 'San Luis Obispo', limit = 50)
num <- (as.data.frame(businesses) %>% select(total))[1,1]
num
businesses_test <- business_search(api_key = key, location = 'San Luis Obispo', limit = 50)
append <- business_search(api_key = key, location = 'San Luis Obispo', limit = 50, offset = 50)
b <- as.data.frame(businesses_test, row.names = c(1:50))
a <- as.data.frame(append, row.names = c(51:100))
glimpse(a)
region.center <- b[1,]$region.center.latitude
# remove closed businesses
#b <- b %>%
#filter(businesses.is_closed == FALSE)
b <- as.data.frame(businesses_test, row.names = c(1:50))
a <- as.data.frame(append, row.names = c(51:100))
# spread dataframe columns
b["latitude"]  <- businesses[["businesses"]][["coordinates"]][["latitude"]]
b["longitude"] <- businesses[["businesses"]][["coordinates"]][["longitude"]]
b["address"] <- businesses[["businesses"]][["location"]][["address1"]]
b["zip_code"] <- businesses[["businesses"]][["location"]][["zip_code"]]
b["state"] <- businesses[["businesses"]][["location"]][["state"]]
b["country"] <- businesses[["businesses"]][["location"]][["country"]]
a["latitude"]  <- append[["businesses"]][["coordinates"]][["latitude"]]
a["longitude"] <- append[["businesses"]][["coordinates"]][["longitude"]]
a["address"] <- append[["businesses"]][["location"]][["address1"]]
a["zip_code"] <- append[["businesses"]][["location"]][["zip_code"]]
a["state"] <- append[["businesses"]][["location"]][["state"]]
a["country"] <- append[["businesses"]][["location"]][["country"]]
combo <- rbind(b %>% select(-c(businesses.coordinates, businesses.location)), a %>% select(-c(businesses.coordinates, businesses.location)))
head(combo)
get_businesses <- function(my_location) {
key <- "pxKTGs3uKpDZXQSo1nKmJKSPycfRqixcudXpKm8oAuVRNEjx_MVUhBryPP8Gg5MgPn6Cl28RO6dfRNFrh3jNQVdcDxu-uNI5IUT7-phwJPiOW2L2D2cRrEtIXJyAXHYx"
businesses <- business_search(api_key = key, location = my_location, limit = 50)
# create the initial dataframe
b <- as.data.frame(businesses, row.names = c(1:50))
b["latitude"]  <- businesses[["businesses"]][["coordinates"]][["latitude"]]
b["longitude"] <- businesses[["businesses"]][["coordinates"]][["longitude"]]
b["address"] <- businesses[["businesses"]][["location"]][["address1"]]
b["zip_code"] <- businesses[["businesses"]][["location"]][["zip_code"]]
b["state"] <- businesses[["businesses"]][["location"]][["state"]]
b["country"] <- businesses[["businesses"]][["location"]][["country"]]
b <- b %>% select(-c(businesses.coordinates, businesses.location))
num <- (b %>% select(total))[1,1]
my_offset <- 50 # max number of businesses per API call
while(my_offset < num) {
# create data to append
append <- business_search(api_key = key, location = my_location, limit = 50, offset = my_offset)
a <- as.data.frame(append)
a["latitude"]  <- append[["businesses"]][["coordinates"]][["latitude"]]
a["longitude"] <- append[["businesses"]][["coordinates"]][["longitude"]]
a["address"] <- append[["businesses"]][["location"]][["address1"]]
a["zip_code"] <- append[["businesses"]][["location"]][["zip_code"]]
a["state"] <- append[["businesses"]][["location"]][["state"]]
a["country"] <- append[["businesses"]][["location"]][["country"]]
b <- rbind(b, a %>% select(-c(businesses.coordinates, businesses.location)))
my_offset = my_offset + 50
}
b
}
businesses_SLO <- get_businesses("San Luis Obispo")
head(businesses_SLO)
nrow(businesses_SLO)
businesses_SLO %>%
toJSON() %>%
write_lines("businesses_SLO.json")
# testing categories merge
test <- head(businesses_SLO) %>% select(businesses.id, businesses.categories)
test2 <- head(businesses_SLO)
categories <- businesses_SLO %>%
select(businesses.id, businesses.categories) %>%
unnest()
categories_matrix <- categories %>%
spread(key = alias, value = title)
categories_matrix
categories_map <- data.frame(alias = unique(categories$alias), title = unique(categories$title))
categories_map
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
View(business_SLO)
View(business_SLO)
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
in
knitr::opts_chunk$set(echo = TRUE)
categories_matrix
# testing categories merge
test <- head(businesses_SLO) %>% select(businesses.id, businesses.categories)
library(jsonlite)
library(tidyverse)
library(yelpr)
key <- "pxKTGs3uKpDZXQSo1nKmJKSPycfRqixcudXpKm8oAuVRNEjx_MVUhBryPP8Gg5MgPn6Cl28RO6dfRNFrh3jNQVdcDxu-uNI5IUT7-phwJPiOW2L2D2cRrEtIXJyAXHYx"
# testing categories merge
test <- head(businesses_SLO) %>% select(businesses.id, businesses.categories)
View(business_SLO)
View(business_SLO)
# testing categories merge
test <- head(businesses_SLO) %>% select(businesses.id, businesses.categories)
library(jsonlite)
library(tidyverse)
library(yelpr)
key <- "pxKTGs3uKpDZXQSo1nKmJKSPycfRqixcudXpKm8oAuVRNEjx_MVUhBryPP8Gg5MgPn6Cl28RO6dfRNFrh3jNQVdcDxu-uNI5IUT7-phwJPiOW2L2D2cRrEtIXJyAXHYx"
# search businesses with keyword 'chinese' in 'New York'
business_ny <- business_search(api_key = key,
location = 'New York',
term = "chinese",
limit = 10)
business_SLO <- as.data.frame(business_search(api_key = key, location = 'San Luis Obispo', limit = 50))
nrow(business_SLO)
businesses <- business_search(api_key = key, location = 'San Luis Obispo', limit = 50)
num <- (as.data.frame(businesses) %>% select(total))[1,1]
num
businesses_test <- business_search(api_key = key, location = 'San Luis Obispo', limit = 50)
append <- business_search(api_key = key, location = 'San Luis Obispo', limit = 50, offset = 50)
b <- as.data.frame(businesses_test, row.names = c(1:50))
a <- as.data.frame(append, row.names = c(51:100))
glimpse(a)
region.center <- b[1,]$region.center.latitude
# remove closed businesses
#b <- b %>%
#filter(businesses.is_closed == FALSE)
b <- as.data.frame(businesses_test, row.names = c(1:50))
a <- as.data.frame(append, row.names = c(51:100))
# spread dataframe columns
b["latitude"]  <- businesses[["businesses"]][["coordinates"]][["latitude"]]
b["longitude"] <- businesses[["businesses"]][["coordinates"]][["longitude"]]
b["address"] <- businesses[["businesses"]][["location"]][["address1"]]
b["zip_code"] <- businesses[["businesses"]][["location"]][["zip_code"]]
b["state"] <- businesses[["businesses"]][["location"]][["state"]]
b["country"] <- businesses[["businesses"]][["location"]][["country"]]
a["latitude"]  <- append[["businesses"]][["coordinates"]][["latitude"]]
a["longitude"] <- append[["businesses"]][["coordinates"]][["longitude"]]
a["address"] <- append[["businesses"]][["location"]][["address1"]]
a["zip_code"] <- append[["businesses"]][["location"]][["zip_code"]]
a["state"] <- append[["businesses"]][["location"]][["state"]]
a["country"] <- append[["businesses"]][["location"]][["country"]]
combo <- rbind(b %>% select(-c(businesses.coordinates, businesses.location)), a %>% select(-c(businesses.coordinates, businesses.location)))
head(combo)
get_businesses <- function(my_location) {
key <- "pxKTGs3uKpDZXQSo1nKmJKSPycfRqixcudXpKm8oAuVRNEjx_MVUhBryPP8Gg5MgPn6Cl28RO6dfRNFrh3jNQVdcDxu-uNI5IUT7-phwJPiOW2L2D2cRrEtIXJyAXHYx"
businesses <- business_search(api_key = key, location = my_location, limit = 50)
# create the initial dataframe
b <- as.data.frame(businesses, row.names = c(1:50))
b["latitude"]  <- businesses[["businesses"]][["coordinates"]][["latitude"]]
b["longitude"] <- businesses[["businesses"]][["coordinates"]][["longitude"]]
b["address"] <- businesses[["businesses"]][["location"]][["address1"]]
b["zip_code"] <- businesses[["businesses"]][["location"]][["zip_code"]]
b["state"] <- businesses[["businesses"]][["location"]][["state"]]
b["country"] <- businesses[["businesses"]][["location"]][["country"]]
b <- b %>% select(-c(businesses.coordinates, businesses.location))
num <- (b %>% select(total))[1,1]
my_offset <- 50 # max number of businesses per API call
while(my_offset < num) {
# create data to append
append <- business_search(api_key = key, location = my_location, limit = 50, offset = my_offset)
a <- as.data.frame(append)
a["latitude"]  <- append[["businesses"]][["coordinates"]][["latitude"]]
a["longitude"] <- append[["businesses"]][["coordinates"]][["longitude"]]
a["address"] <- append[["businesses"]][["location"]][["address1"]]
a["zip_code"] <- append[["businesses"]][["location"]][["zip_code"]]
a["state"] <- append[["businesses"]][["location"]][["state"]]
a["country"] <- append[["businesses"]][["location"]][["country"]]
b <- rbind(b, a %>% select(-c(businesses.coordinates, businesses.location)))
my_offset = my_offset + 50
}
b
}
businesses_SLO <- get_businesses("San Luis Obispo")
head(businesses_SLO)
nrow(businesses_SLO)
businesses_SLO %>%
toJSON() %>%
write_lines("businesses_SLO.json")
# testing categories merge
test <- head(businesses_SLO) %>% select(businesses.id, businesses.categories)
test2 <- head(businesses_SLO)
categories <- businesses_SLO %>%
select(businesses.id, businesses.categories) %>%
unnest()
categories_matrix <- categories %>%
spread(key = alias, value = title)
categories_matrix
categories_map <- data.frame(alias = unique(categories$alias), title = unique(categories$title))
categories_map
categories_matrix
check_category <- function(id, category) {
categories_matrix %>%
filter(businesses.id == id) %>%
select(category) %>%
is.na()
}
# testing categories merge
test <- head(businesses_SLO) %>% select(businesses.id, businesses.categories)
test2 <- head(businesses_SLO)
categories <- businesses_SLO %>%
select(businesses.id, businesses.categories) %>%
unnest()
categories_matrix <- categories %>%
spread(key = title, value = alias)
categories_matrix
categories_map <- data.frame(alias = unique(categories$alias), title = unique(categories$title))
categories_map
check_category <- function(id, category) {
categories_matrix %>%
filter(businesses.id == id) %>%
select(category) %>%
is.na()
}
check_category("_3cAeuaKocR1L5nLJITs7Q")
check_category <- function(id, category) {
categories_matrix %>%
filter(businesses.id == id) %>%
select(category) %>%
is.na()
}
check_category("_3cAeuaKocR1L5nLJITs7Q", "American (Traditional)")
check_category <- function(id, category) {
categories_matrix %>%
filter(businesses.id == id) %>%
select(category) %>%
is.na()
}
check_category("_3cAeuaKocR1L5nLJITs7Q", "American (New)")
check_category <- function(id, category) {
!categories_matrix %>%
filter(businesses.id == id) %>%
select(category) %>%
is.na()
}
check_category("_3cAeuaKocR1L5nLJITs7Q", "American (New)")
check_category <- function(id, category) {
!categories_matrix %>%
filter(businesses.id == id) %>%
select(category) %>%
is.na()
}
check_category("_3cAeuaKocR1L5nLJITs7Q", "American (Traditional)")
shiny::runApp('Yelp-ShinyApp')
View(businesses_SLO)
View(businesses_SLO)
runApp('Yelp-ShinyApp')
shiny::runApp('Yelp-ShinyApp')
runApp('~/Dropbox/CP8/STAT 331/shiny-examples-master/006-tabsets')
runApp('shiny-examples-master/006-tabsets')
runApp('shiny-examples-master/015-layout-navbar')
runApp('Yelp-ShinyApp')
shiny::runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
runApp('Yelp-ShinyApp')
